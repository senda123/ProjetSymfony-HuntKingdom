<?php

namespace PanierBundle\Repository;

/**
 * CommandeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommandeRepository extends \Doctrine\ORM\EntityRepository
{
    public function RechercheCommandeUser($idUser)
    {
        $query = $this->getEntityManager()->createQuery("Select c FROM PanierBundle\Entity\Commande c WHERE c.idUser=:idUser")
             ->setParameter('idUser',$idUser);
        return $query->getResult();

    }


    public function NombreDeCommandesValides($id){
        $conn = $this->getEntityManager()->getConnection();
        $sql = "select COUNT(*) as nbCommandes FROM commande where etat_c=1 and idUser='$id'   ";
        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();
        return $stmt->fetchAll();
    }


    public function TriParPrix()
    {
        $query = $this->getEntityManager()->createQuery("Select c FROM PanierBundle\Entity\Commande c ORDER BY c.totalC");

        return $query->getResult();
    }

    public function TriParEtat()
    {
        $query = $this->getEntityManager()->createQuery("Select c FROM PanierBundle\Entity\Commande c ORDER BY c.etatC");

        return $query->getResult();
    }
    public function TriParProduit()
    {
        $query = $this->getEntityManager()->createQuery("Select c FROM PanierBundle\Entity\Commande c ORDER BY c.idP");

        return $query->getResult();
    }

    public function TriParDate()
    {
        $query = $this->getEntityManager()->createQuery("Select c FROM PanierBundle\Entity\Commande c ORDER BY c.dateC");

        return $query->getResult();
    }

    public function nbCommandesProduits($id){
        $conn = $this->getEntityManager()->getConnection();
        $sql = "SELECT MONTH(date_c) as mois ,count(*) as nbCommandes FROM `commande` where idP='$id' group by MONTH(date_c)";
        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();
        return $stmt->fetchAll();
    }







}
